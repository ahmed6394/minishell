MiniShell ToDo list:

1️⃣ Basic Shell Setup
- [x] Display a prompt (minishell$ ).
- [x] Read user input using readline().
- [x] Implement command history using add_history().
- [x] Handle empty inputs (ignore and show a new prompt).

 2️⃣ Command Execution
- [x] Parse and tokenize the input.
- [x] Search and launch executables:
	- [x] Check absolute path (/bin/ls).
	- [x] Check relative path (./my_script).
	- [x] Search in PATH.
- [x] Execute external commands using fork() and execve().

 3️⃣ Handling Quotes
- [x] Implement single quotes (') to prevent interpretation of metacharacters.
- [x] Implement double quotes (") to prevent interpretation of metacharacters except for $.
- [x] Ensure the shell does not interpret unclosed quotes.

4️⃣ Environment Variables
- [x] Expand variables ($VAR) to their values.
- [x] Implement $? to return the last exit status.
- [x] Implement built-in env to display environment variables.

5️⃣ Redirections
- [x] Implement input redirection (<).
- [x] Implement output redirection (>).
- [x] Implement heredoc (<<) to read input until a delimiter.
- [x] Implement append redirection (>>).
- [x] Implement ft_echo for redirection.
- [x] avoid execvep
- [x] heredoc and pip

6️⃣ Pipes (|)
- [x] Implement basic pipes (ls | wc -l).
- [x] Chain multiple pipes (cat file | grep text | wc -l).
- [x] Ensure proper file descriptor management.

7️⃣ Built-in Commands
- [x] Implement echo with -n option.
- [x] Implement cd with relative/absolute paths.
- [x] Implement pwd with no options.
- [x] Implement export to add environment variables.
- [x] Implement unset to remove environment variables.
- [x] Implement env to print the environment.
- [x] Implement exit to quit the shell.

8️⃣ Signal Handling
- [x] Handle CTRL+C (^C should display a new prompt).
- [x] Handle CTRL+D (should exit the shell).
- [x] Handle CTRL+\ (should do nothing).
- [x] Use only one global variable for signal handling.

9️⃣ Error Handling & Edge Cases
- [ ] Prevent execution of invalid commands (lsdskdfk).
- [ ] Prevent execution of empty commands (;;, && not required).
- [ ] Handle syntax errors (e.g., unclosed quotes).
- [ ] Ensure proper memory management (check with valgrind).

	
	
